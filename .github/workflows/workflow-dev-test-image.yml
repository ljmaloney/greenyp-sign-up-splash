name: Build and Push GreenYP Docker Dev/Test Image

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: greenyp/images/greenyp-frontend
      ECR_REPO: ${{ secrets.ECR_REPO_URI }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      GH_PAT: ${{ secrets.GH_PAT }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Bump version (main/master only)
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        run: |
          FILE=version.properties

          VERSION=$(grep 'version=' $FILE | cut -d= -f2)
          MAJOR=$(echo $VERSION | cut -d. -f1)
          MINOR=$(echo $VERSION | cut -d. -f2)
          PATCH=$(echo $VERSION | cut -d. -f3)
          PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "version=$NEW_VERSION" > $FILE
          echo "New version: $NEW_VERSION"

          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git remote set-url origin https://x-access-token:${GH_PAT}@github.com/${{ github.repository }}

          git stash
          git fetch origin
          git pull --rebase origin ${GITHUB_REF#refs/heads/}
          git stash pop

          git add $FILE
          git commit -m "CI: Bump version to $NEW_VERSION" || echo "No changes to commit"
          git push origin HEAD:${GITHUB_REF#refs/heads/}

      - name: Set version env var
        id: version
        run: echo "VERSION=$(grep 'version=' version.properties | cut -d= -f2)" >> $GITHUB_ENV

      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        run: |
          docker build -t $IMAGE_NAME:${{ env.VERSION }} -f Dockerfile .

      - name: Tag Docker image for ECR
        run: |
          docker tag $IMAGE_NAME:${{ env.VERSION }} $ECR_REPO/$IMAGE_NAME:${{ env.VERSION }}
          docker tag $IMAGE_NAME:${{ env.VERSION }} $ECR_REPO/$IMAGE_NAME:latest

      - name: Push Docker image to ECR
        run: |
          docker push $ECR_REPO/$IMAGE_NAME:${{ env.VERSION }}
          docker push 557690587797.dkr.ecr.us-east-1.amazonaws.com/greenyp/images/greenyp-frontend:latest
